{"ast":null,"code":"var _jsxFileName = \"/home/jarri/Desktop/projects/react-portfolio/src/elements/contact/ContactThree.jsx\";\nimport React, { Component } from \"react\";\nimport * as emailjs from \"emailjs-com\";\nimport SimpleReactValidator from \"simple-react-validator\";\n\nclass ContactThree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\",\n      mailSent: false,\n      error: null\n    };\n    this.validator = new SimpleReactValidator();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      subject,\n      message\n    } = this.state;\n    console.log(email);\n    console.log(name !== \"\");\n    console.log(subject !== \"\");\n    console.log(message !== \"\");\n\n    if (this.validator.allValid()) {\n      alert(\"You submitted the form and stuff!\");\n      let templateParams = {\n        from_name: name,\n        user_mail: email,\n        subject: subject,\n        message: message\n      };\n      emailjs.send(\"default_service\", \"emailtemplate\", templateParams, \"user_FqIXKAIpDQYC1lkU3it2G\");\n      alert(\"A form was submitted: \" + this.state.name + \" // \" + this.state.email);\n      this.resetForm();\n    } else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  }\n\n  resetForm() {\n    this.setState({\n      fname: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\",\n      mailSent: true,\n      error: null\n    });\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"contact-form--1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"row row--35 align-items-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"col-lg-6 order-2 order-lg-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"section-title text-left mb--50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h2\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, \"Hire Me.\"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, \"I'm allways willing to learn new technologies and get involve in challenging projects.\", \" \"),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, \" Fill the fields below and press submit to contact me.\")),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"form-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        value: this.state.name,\n        onChange: e => {\n          this.setState({\n            name: e.target.value\n          });\n        },\n        placeholder: \"Your Name *\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }), this.validator.message(\"name\", this.state.name, \"required|alpha\")),\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        htmlFor: \"item02\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        id: \"item02\",\n        value: this.state.email,\n        onChange: e => {\n          this.setState({\n            email: e.target.value\n          });\n        },\n        placeholder: \"Your email *\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }), this.validator.message(\"email\", this.state.email, \"required|email\")),\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        htmlFor: \"item03\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        type: \"text\",\n        name: \"subject\",\n        id: \"item03\",\n        value: this.state.subject,\n        onChange: e => {\n          this.setState({\n            subject: e.target.value\n          });\n        },\n        placeholder: \"Write a Subject\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }), this.validator.message(\"subject\", this.state.subject, \"required|alpha_space\")),\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        htmlFor: \"item04\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"textarea\", {\n        type: \"text\",\n        id: \"item04\",\n        name: \"message\",\n        value: this.state.message,\n        onChange: e => {\n          this.setState({\n            message: e.target.value\n          });\n        },\n        placeholder: \"Your Message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }), this.validator.message(\"message\", this.state.message, \"required|alpha_space\")),\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        className: \"rn-button-style--2 btn-solid\",\n        type: \"submit\",\n        value: \"submit\",\n        name: \"submit\",\n        id: \"mc-embedded-subscribe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }\n      }, \"Submit\")))),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"col-lg-6 order-1 order-lg-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"thumbnail mb_md--30 mb_sm--30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"img\", {\n        src: `${this.props.contactImages}`,\n        alt: \"trydo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }))))))\n    );\n  }\n\n}\n\nexport default ContactThree;","map":{"version":3,"sources":["/home/jarri/Desktop/projects/react-portfolio/src/elements/contact/ContactThree.jsx"],"names":["React","Component","emailjs","SimpleReactValidator","ContactThree","constructor","props","state","name","email","subject","message","mailSent","error","validator","handleFormSubmit","bind","e","preventDefault","console","log","allValid","alert","templateParams","from_name","user_mail","send","resetForm","showMessages","forceUpdate","setState","fname","render","target","value","contactImages"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nclass ContactThree extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      subject: \"\",\r\n      message: \"\",\r\n      mailSent: false,\r\n      error: null,\r\n    };\r\n    this.validator = new SimpleReactValidator();\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault();\r\n    const { name, email, subject, message } = this.state;\r\n    console.log(email);\r\n    console.log(name !== \"\");\r\n    console.log(subject !== \"\");\r\n    console.log(message !== \"\");\r\n\r\n    if (this.validator.allValid()) {\r\n      alert(\"You submitted the form and stuff!\");\r\n\r\n      let templateParams = {\r\n        from_name: name,\r\n        user_mail: email,\r\n        subject: subject,\r\n        message: message,\r\n      };\r\n      emailjs.send(\r\n        \"default_service\",\r\n        \"emailtemplate\",\r\n        templateParams,\r\n        \"user_FqIXKAIpDQYC1lkU3it2G\"\r\n      );\r\n      alert(\r\n        \"A form was submitted: \" + this.state.name + \" // \" + this.state.email\r\n      );\r\n      this.resetForm();\r\n    } else {\r\n      this.validator.showMessages();\r\n\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      fname: \"\",\r\n      email: \"\",\r\n      subject: \"\",\r\n      message: \"\",\r\n      mailSent: true,\r\n      error: null,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contact-form--1\">\r\n        <div className=\"container\">\r\n          <div className=\"row row--35 align-items-start\">\r\n            <div className=\"col-lg-6 order-2 order-lg-1\">\r\n              <div className=\"section-title text-left mb--50\">\r\n                <h2 className=\"title\">Hire Me.</h2>\r\n                <p className=\"description\">\r\n                  I'm allways willing to learn new technologies and get involve\r\n                  in challenging projects.{\" \"}\r\n                </p>\r\n                <p> Fill the fields below and press submit to contact me.</p>\r\n              </div>\r\n              <div className=\"form-wrapper\">\r\n                <form onSubmit={this.handleFormSubmit.bind(this)}>\r\n                  <label htmlFor=\"name\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={(e) => {\r\n                        this.setState({ name: e.target.value });\r\n                      }}\r\n                      placeholder=\"Your Name *\"\r\n                    />\r\n                    {this.validator.message(\r\n                      \"name\",\r\n                      this.state.name,\r\n                      \"required|alpha\"\r\n                    )}\r\n                  </label>\r\n\r\n                  <label htmlFor=\"item02\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      id=\"item02\"\r\n                      value={this.state.email}\r\n                      onChange={(e) => {\r\n                        this.setState({ email: e.target.value });\r\n                      }}\r\n                      placeholder=\"Your email *\"\r\n                    />\r\n                    {this.validator.message(\r\n                      \"email\",\r\n                      this.state.email,\r\n                      \"required|email\"\r\n                    )}\r\n                  </label>\r\n\r\n                  <label htmlFor=\"item03\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"subject\"\r\n                      id=\"item03\"\r\n                      value={this.state.subject}\r\n                      onChange={(e) => {\r\n                        this.setState({ subject: e.target.value });\r\n                      }}\r\n                      placeholder=\"Write a Subject\"\r\n                    />\r\n                    {this.validator.message(\r\n                      \"subject\",\r\n                      this.state.subject,\r\n                      \"required|alpha_space\"\r\n                    )}\r\n                  </label>\r\n                  <label htmlFor=\"item04\">\r\n                    <textarea\r\n                      type=\"text\"\r\n                      id=\"item04\"\r\n                      name=\"message\"\r\n                      value={this.state.message}\r\n                      onChange={(e) => {\r\n                        this.setState({ message: e.target.value });\r\n                      }}\r\n                      placeholder=\"Your Message\"\r\n                    />\r\n                    {this.validator.message(\r\n                      \"message\",\r\n                      this.state.message,\r\n                      \"required|alpha_space\"\r\n                    )}\r\n                  </label>\r\n                  <button\r\n                    className=\"rn-button-style--2 btn-solid\"\r\n                    type=\"submit\"\r\n                    value=\"submit\"\r\n                    name=\"submit\"\r\n                    id=\"mc-embedded-subscribe\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 order-1 order-lg-2\">\r\n              <div className=\"thumbnail mb_md--30 mb_sm--30\">\r\n                <img src={`${this.props.contactImages}`} alt=\"trydo\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ContactThree;\r\n"]},"metadata":{},"sourceType":"module"}